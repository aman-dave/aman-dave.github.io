{"version":3,"sources":["webpack:///./src/pages/blogs.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/images/sun.png","webpack:///./src/images/moon.png"],"names":["BlogPage","props","_this","_React$Component","call","this","state","handleLink","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","window","location","replace","render","_this2","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","gatsby_plugin_dark_mode__WEBPACK_IMPORTED_MODULE_10__","_ref","theme","toggleTheme","_components_layout__WEBPACK_IMPORTED_MODULE_6__","className","onClick","style","float","fontSize","paddingTop","react_toggle__WEBPACK_IMPORTED_MODULE_11___default","onChange","e","target","checked","value","icons","src","require","height","marginTop","marginLeft","unchecked","react_reveal_Fade__WEBPACK_IMPORTED_MODULE_9___default","right","backgroundColor","color","transition","map","post","key","node","id","border","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","fields","slug","gatsby_image__WEBPACK_IMPORTED_MODULE_7___default","fixed","frontmatter","thumbnail","childImageSharp","title","tags","tag","kebabCase","date","excerpt","React","Component","pageQuery","m","module","exports","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Header","siteTitle","react_default","background","margin","maxWidth","padding","gatsby_browser_entry","textDecoration","defaultProps","Layout","children","_856328897","textAlign","Date","getFullYear","href","p"],"mappings":"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","file":"component---src-pages-blogs-js-36542fdabb20e8c9399c.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport Img from 'gatsby-image';\nimport {kebabCase} from \"lodash\";\nimport Fade from 'react-reveal/Fade';\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode';\nimport { CustomInput} from 'reactstrap';\nimport Toggle from 'react-toggle'\n\nclass BlogPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\n        this.handleLink = this.handleLink.bind(this);\n    }\n\n\n\n\n    handleLink(){\n        window.location.replace(\"/\");\n    }\n\n    render() {\n\n        const posts = this.props.data.allMarkdownRemark.edges;\n\n        return (\n            <ThemeToggler>\n                {({ theme, toggleTheme }) => (\n            <Layout >\n                <h1 className=\"blogHeader\">\n                    <span onClick={this.handleLink} >Aman Dave</span>\n                    <div style={{ float: \"right\", fontSize: \"20px\", paddingTop: \"10px\"}}>\n                        <label>\n                            <Toggle\n                                className='dark-theme'\n                                onChange={e => toggleTheme(e.target.checked ? 'dark' : 'light')}\n                                value={theme === 'dark'}\n                                icons={{\n                                    checked: <img src={require('../images/sun.png')} height=\"20px\" style={{marginTop :\"-5px\", marginLeft: \"-5px\"}} />,\n                                    unchecked:<img src={require('../images/moon.png')} height=\"20px\" style={{marginTop :\"-5px\", marginLeft: \"-5px\"}}  />\n                                }}/>\n                        </label>\n                    </div>\n                </h1>\n\n                <br/>\n                <Fade right>\n                    <div\n                        style={{\n                            backgroundColor: 'var(--bg)',\n                            color: 'var(--textNormal)',\n                            transition: 'color 0.2s ease-out, background 0.2s ease-out',\n                        }}\n                        className=\"post-list\">\n                        {posts.map(post => (\n                            <div key={post.node.id} className=\"post-list__item\" style={{\n                                border: \"1px solid #393e46\", marginBottom: \"50px\"}}>\n                                <div className=\"post-list__thumbnail\">\n                                    <Link to={post.node.fields.slug}>\n                                        <Img\n                                            fixed={post.node.frontmatter.thumbnail.childImageSharp.fixed}\n                                        />\n                                    </Link>\n                                </div>\n                                <div className=\"post-list__content\">\n                                    <Link to={post.node.fields.slug}>\n                                        <h2 className=\"blogTitle\">{post.node.frontmatter.title}</h2>\n                                    </Link>\n                                    {post.node.frontmatter.tags ? (\n                                        <div className=\"tags-container\">\n                                            <ul className=\"taglist\">\n                                                {post.node.frontmatter.tags.map(tag => (\n                                                    <li key={tag + `tag`}>\n                                                        <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                    ) : null}\n\n                                    <p>{post.node.frontmatter.date}</p>\n                                    <div className=\"post-list__excerpt\">{post.node.excerpt}</div>\n\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </Fade>\n            </Layout>\n                )}\n            </ThemeToggler>\n        );\n    };\n}\nexport default BlogPage;\n\n// Get all markdown data, in descending order by date, and grab the id, excerpt, slug, date, and title\n//blog.js\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                fixed(width: 200, height: 200) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#007bff`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport '../styles/styles.scss'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div style={{\n        backgroundColor: 'var(--bg)',\n        color: 'var(--textNormal)',\n        transition: 'color 0.2s ease-out, background 0.2s ease-out',\n    }}>\n      <div\n        style={{\n            margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n          <br/><br/>\n        <footer style={{textAlign: \"center\"}}>\n          © {new Date().getFullYear()}, Built with ❤ By\n          {` `}\n          <a href=\"https://www.linkedin.com/in/aman-dave/\">Aman</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/sun-636b3a1eef4b1172bab054bd83b14e36.png\";","module.exports = __webpack_public_path__ + \"static/moon-aa4c148b755cef9618c91d49cd4a72e8.png\";"],"sourceRoot":""}